#;(use foreign)
(use lolevel)

(foreign-declare "#include <ctpublic.h>")

(define-foreign-type cs-context* (c-pointer "CS_CONTEXT"))
(define-foreign-type cs-int integer32)
(define-foreign-variable cs-version-100 cs-int "CS_VERSION_100")
;;; CS_RETCODE cs_ctx_alloc(CS_INT version, CS_CONTEXT ** ctx);
;; (define-external context cs-context*)
;; (define-external context (c-pointer "CS_CONTEXT"))
;; (foreign-declare "CS_CONTEXT *context;")
;; (foreign-declare "CS_RETCODE ret;")
;; (foreign-declare "context = (CS_CONTEXT *) NULL;")
;; (foreign-declare "context = (CS_CONTEXT *) NULL;")
;; (define-foreign-variable context (c-pointer "CS_CONTEXT") "NULL")
;; (define-foreign-variable context cs-context* "NULL")
(define cs-ctx-alloc (foreign-lambda cs-int cs_ctx_alloc cs-int (c-pointer cs-context*)))
;; (foreign-declare "ret = cs_ctx_alloc(CS_VERSION_100, &context);")
;; (cs-ctx-alloc cs-version-100 context)
;; (set! context (null-pointer))
(let-location ((context cs-context*))
              (cs-ctx-alloc cs-version-100 (location context)))
;; (print context)
(display 123)
